name: test and deploy

on:
  push:
    branches:
      - master

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js v10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Cache node modules
        uses: actions/cache@v1
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node10x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node10x-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint Application
        run: npm run lint
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js v10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Cache node modules
        uses: actions/cache@v1
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node10x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node10x-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test Application
        run: npm run test
  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: '10'
      - name: Cache node modules
        uses: actions/cache@v1
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node10x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node10x-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Cache Cypress
        id: cypress-cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-v1-${{ runner.os }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-cache-v1-${{ runner.os }}
      - name: Install Cypress
        if: steps.cypress-cache.outputs.cache-hit != 'true'
        run: npm i cypress@latest --save-dev
      - name: Run end to end tests
        run: npm run e2e
  build:
    name: build and deploy
    needs: [lint, test, e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js v10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Cache node modules
        uses: actions/cache@v1
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node10x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node10x-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build Application
        run: npm run build
      - name: Deploy
        run: npm run deploy:dashboard -- --token ${{ secrets.FIREBASE_TOKEN }}
      - name: print log
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: firebase-log
          path: /home/runner/.npm/_logs
